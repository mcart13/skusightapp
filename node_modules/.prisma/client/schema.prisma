generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "windows"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Session {
  id            String    @id
  shop          String
  state         String
  isOnline      Boolean   @default(false)
  scope         String?
  expires       DateTime?
  accessToken   String
  userId        BigInt?
  firstName     String?
  lastName      String?
  email         String?
  accountOwner  Boolean   @default(false)
  locale        String?
  collaborator  Boolean?  @default(false)
  emailVerified Boolean?  @default(false)
}

model shopSettings {
  id                        String   @id @default(cuid())
  shopDomain                String   @unique
  aiTaggingEnabled          Boolean  @default(true)
  aiTaggingOnChange         Boolean  @default(true)
  aiTaggingFrequency        String   @default("daily")
  aiTaggingBatchSize        Int      @default(50)
  performanceAlertThreshold Int      @default(60000)
  createdAt                 DateTime @default(now())
  updatedAt                 DateTime @updatedAt
}

model processingJob {
  id         String    @id
  shopDomain String
  jobType    String
  status     String
  payload    String
  result     String?
  createdAt  DateTime  @default(now())
  updatedAt  DateTime? @updatedAt

  @@index([shopDomain])
  @@index([jobType])
  @@index([status])
}

model Alert {
  id           String   @id
  timestamp    DateTime @default(now())
  level        String
  message      String
  source       String?
  shop         String?
  errorMessage String?
  errorStack   String?
  metadata     String?
  acknowledged Boolean  @default(false)

  @@index([shop])
  @@index([level])
  @@index([timestamp])
}

model AppLog {
  id        String   @id
  timestamp DateTime @default(now())
  level     String
  category  String
  shop      String?
  source    String?
  message   String
  metadata  String?
  stack     String?

  @@index([shop])
  @@index([level])
  @@index([category])
  @@index([timestamp])
}
